<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Zhao Hua Xi Shi</title>
 <link href="http://localhost:4000/life/atom.xml" rel="self"/>
 <link href="http://localhost:4000/life/"/>
 <updated>2017-11-05T17:18:27+08:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Wo</name>
   <email>explorewo@gmail.com</email>
 </author>

 
 <entry>
   <title>Docker-Swarms</title>
   <link href="http://localhost:4000/2017/01/11/Dcoker-Swarms/"/>
   <updated>2017-01-11T00:00:00+08:00</updated>
   <id>http://localhost:4000/life/2017/01/11/Dcoker-Swarms</id>
   <content type="html">&lt;h2 id=&quot;swarms&quot;&gt;Swarms&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A swarm is a group of machines that are running Docker and joined into a cluster. Join multiple machines into a “Dockerized” cluster called a swarm.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deploy this app onto a cluster, running it on multiple machines.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set-up-the-swarm&quot;&gt;Set up the swarm&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create a cluster / two VMs&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ docker-machine create --driver virtualbox myvm1
 Running pre-create checks...
 (myvm1) No default Boot2Docker ISO found locally, downloading the latest release...
 (myvm1) Latest release for github.com/boot2docker/boot2docker is v17.10.0-ce
 (myvm1) Downloading /Users/william/.docker/machine/cache/boot2docker.iso from https://github.com/boot2docker/boot2docker/releases/download/v17.10.0-ce/boot2docker.iso...
 (myvm1) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
 Creating machine...
 (myvm1) Copying /Users/william/.docker/machine/cache/boot2docker.iso to /Users/william/.docker/machine/machines/myvm1/boot2docker.iso...
 (myvm1) Creating VirtualBox VM...
 (myvm1) Creating SSH key...
 (myvm1) Starting the VM...
 (myvm1) Check network to re-create if needed...
 (myvm1) Found a new host-only adapter: &quot;vboxnet0&quot;
 (myvm1) Waiting for an IP...
 Waiting for machine to be running, this may take a few minutes...
 Detecting operating system of created instance...
 Waiting for SSH to be available...
 Detecting the provisioner...
 Provisioning with boot2docker...
 Copying certs to the local machine directory...
 Copying certs to the remote machine...
 Setting Docker configuration on the remote daemon...
 Checking connection to Docker...
 Docker is up and running!
 To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: docker-machine env myvm1
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;List the VMS and get their IP: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine ls&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initialize the swarm and add nodes:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ docker-machine ssh myvm1 &quot;docker swarm init --advertise-addr 192.168.99.100&quot;
 Swarm initialized: current node (m5ddcbmwk63e2ao182szg8vfq) is now a manager.

 To add a worker to this swarm, run the following command:

 docker swarm join --token SWMTKN-1-4qgigh1juhts0mqfn2kgpxxm1cmt4a5ymow4zah4vrhhlb4tot-82oa8jfmzf6v130ow1dsief73 192.168.99.100:2377

 To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ docker-machine ssh myvm2 &quot;docker swarm join --token SWMTKN-1-4qgigh1juhts0mqfn2kgpxxm1cmt4a5ymow4zah4vrhhlb4tot-82oa8jfmzf6v130ow1dsief73 192.168.99.100:2377&quot;
 This node joined a swarm as a worker.
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;View the nodes in the first swarm &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine ssh myvm1 &quot;docker node ls&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;deploy-the-app-on-the-swarm-cluster&quot;&gt;Deploy the app on the swarm cluster&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Configure a &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine&lt;/code&gt; shell to the swarm manager. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine env myvm1&lt;/code&gt; to get the command to configure the shell to talk to myvm1.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ docker-machine env myvm1
  export DOCKER_TLS_VERIFY=&quot;1&quot;
  export DOCKER_HOST=&quot;tcp://192.168.99.100:2376&quot;
  export DOCKER_CERT_PATH=&quot;/Users/william/.docker/machine/machines/myvm1&quot;
  export DOCKER_MACHINE_NAME=&quot;myvm1&quot;
  # Run this command to configure your shell:
  # eval $(docker-machine env myvm1)
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;deploy-the-app-on-the-swarm-manager&quot;&gt;Deploy the app on the swarm manager:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker stack deploy -c docker-compose.yml getstartedlab&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ docker stack ps getstartedlab&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;accessing-the-cluster&quot;&gt;Accessing the cluster:&lt;/h2&gt;
&lt;p&gt;-The network we created is shared between them and load-balancing. We can access the app from the IP address of either myvm1 or myvm2.&lt;/p&gt;

&lt;h2 id=&quot;cleanup-and-reboot&quot;&gt;Cleanup and reboot&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tear down the stack &lt;code class=&quot;highlighter-rouge&quot;&gt;docker stack rm getstartedlab&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove swarm &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine ssh myvm2 &quot;docker swarm leave&quot;&lt;/code&gt; on the worker and &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-machine ssh myvm1 &quot;docker swarm leave --force&quot;&lt;/code&gt; on the manager.&lt;/li&gt;
  &lt;li&gt;Unsetting docker-machine shell variable settings &lt;code class=&quot;highlighter-rouge&quot;&gt;eval $(docker-machine env -u)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Regular Expressions</title>
   <link href="http://localhost:4000/2017/01/09/Regular-Expressions/"/>
   <updated>2017-01-09T00:00:00+08:00</updated>
   <id>http://localhost:4000/life/2017/01/09/Regular-Expressions</id>
   <content type="html">&lt;h2 id=&quot;phps-regular-expressions-support&quot;&gt;PHP’s Regular Expressions Support&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ambuilding/LevelUp/blob/master/regex.php&quot;&gt;PHP’s Regular Expressions Support(github-regex.php)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;character-sets&quot;&gt;Character Sets&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/[w]{3}/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/[w]{3,5}/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/[w]*/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/[w]+/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/[w]?/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/www\.([^\.]+)/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;greediness&quot;&gt;Greediness&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/@(\w+)/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;https://www.dniya.com/$1&quot;&amp;gt;$1&amp;lt;/a&amp;gt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;[a-zA-Z0-9_]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lookaheads-and-lookbehinds&quot;&gt;Lookaheads and Lookbehinds&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/google(?=&amp;lt;)/i&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/google(?!&amp;lt;)/i&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;(?=string) (?!string) (?&amp;lt;=string) (?&amp;lt;!string)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$string = '$name = &quot;Dniya&quot;; My name is Dniya.';

$result = preg_replace('/(?&amp;lt;=\$)name/', 'VARIABLE', $string);

var_dump($result);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;link&quot;&gt;Link&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://regexr.com/&quot;&gt;RegExr is an online tool to learn, build, &amp;amp; test Regular Expressions (RegEx / RegExp):&lt;/a&gt; https://regexr.com/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.phpliveregex.com&quot;&gt;A live regular expression tester for PHP:&lt;/a&gt; http://www.phpliveregex.com&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://regexper.com&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>RESTful APIs</title>
   <link href="http://localhost:4000/2017/01/08/RESTful-APIs/"/>
   <updated>2017-01-08T00:00:00+08:00</updated>
   <id>http://localhost:4000/life/2017/01/08/RESTful-APIs</id>
   <content type="html">&lt;h2 id=&quot;restful-api&quot;&gt;RESTful API&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://uploads.toptal.io/blog/image/123414/toptal-blog-image-1498567452740-6773f3fd56484fa794cbf1dbfb9ebb38.png&quot; alt=&quot;HTTP Verbs Represent Actions&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Register&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -X POST http://localhost:8000/api/register
-H &quot;Accept: application/json&quot;
-H &quot;Content-Type: application/json&quot;
-d '{&quot;name&quot;: &quot;Andy&quot;, &quot;email&quot;: &quot;andy@example.com&quot;, &quot;password&quot;: &quot;andydufresne&quot;, &quot;password_confirmation&quot;: &quot;andydufresne&quot;}' | python -mjson.tool
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Login&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl -X POST localhost:8000/api/login
-H &quot;Accept: appliation/json&quot;
-H &quot;Content-type: application/json&quot;
-d &quot;{\&quot;email\&quot;: \&quot;andy@example.com\&quot;, \&quot;password\&quot;: \&quot;andydufresne\&quot; }&quot; | python -mjson.tool
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Tips&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl http://127.0.0.1:8000/api // api postman -i
$ curl http://… | python -mjson.tool // api
$ alias prettify=“python -mjson.tool”
$ curl -I www.google.com
$ curl &quot;https://www.google.com/search?q=mice&quot;
$ curl -I https://www.facebook.com/
$ curl -I https://31.13.95.36/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux Man</title>
   <link href="http://localhost:4000/2017/01/07/Linux-Man/"/>
   <updated>2017-01-07T00:00:00+08:00</updated>
   <id>http://localhost:4000/life/2017/01/07/Linux-Man</id>
   <content type="html">&lt;h2 id=&quot;linux-man&quot;&gt;Linux Man&lt;/h2&gt;

&lt;h3 id=&quot;install-net-tools-command-in-centos-7--rhel-7&quot;&gt;&lt;a href=&quot;https://www.ostechnix.com/linux-troubleshooting-netstat-command-not-found-in-centos-7-rhel-7/&quot;&gt;Install net-tools command in CentOS 7 / RHEL 7&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;First, we should find out which package provides ‘netstat’ command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`# yum provides */netstat`
`# yum whatprovides */netstat`

`# yum install net-tools`

`# netstat`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;how-to-open-a-port-in-the-firewall-on-centos-or-rhel&quot;&gt;&lt;a href=&quot;http://ask.xmodulo.com/open-port-firewall-centos-rhel.html&quot;&gt;How to open a port in the firewall on CentOS or RHEL&lt;/a&gt;&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`# iptables -L`
`# firewall-cmd --zone=public --add-port=80/tcp --permanent`
`# firewall-cmd --reload`
`# firewall-cmd --list-all`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;how-to-set-up-a-firewall-using-firewalld-on-centos-7&quot;&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7&quot;&gt;How To Set Up a Firewall Using FirewallD on CentOS 7&lt;/a&gt;&lt;/h2&gt;
</content>
 </entry>
 
 <entry>
   <title>Virtual private network</title>
   <link href="http://localhost:4000/2017/01/02/Virtual-Private-Network/"/>
   <updated>2017-01-02T00:00:00+08:00</updated>
   <id>http://localhost:4000/life/2017/01/02/Virtual-Private-Network</id>
   <content type="html">&lt;h2 id=&quot;virtual-private-network&quot;&gt;Virtual private network&lt;/h2&gt;

&lt;p&gt;It redirects your connection to the Internet via a remote server run by a VPN provider. The VPN server becomes secure launching pad for you before you access various websites.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s1.nordcdn.com/nordvpn/3.15.0/images/global/illustrations/schemes/vpn-scheme.svg&quot; alt=&quot;vpn-scheme&quot; /&gt;
&lt;small&gt;1. Your device; 2. Encrypted VPN tunnel; 3. The Internet&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;All the network traffic between your device and the VPN server is directed through a secure virtual tunnel. All of the data sent and received is encrypted. Your device appears to have the IP address of the VPN server, protecting your true identity. You’re browsing from the server’s geographical location, not your computer’s location.&lt;/p&gt;

&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h2&gt;

&lt;p&gt;Usually, when you connect to the Internet, you start by connecting to your ISP, which then redirects you to any websites or applications that you wish to visit. All your Internet traffic can be viewed by your ISP as it passes through their servers.&lt;/p&gt;

&lt;p&gt;If you have VPN enabled, you first connect to a server run by your VPN provider through an encrypted connection, which is also called a VPN tunnel. All data traveling between your device and the VPN server is encrypted so that only you and the server can see it.&lt;/p&gt;

&lt;h2 id=&quot;what-happens-when-you-connect-to-it&quot;&gt;What happens when you connect to it?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Your ISP no longer knows what you do on the Internet.&lt;/li&gt;
  &lt;li&gt;Your IP address is replaced with the IP of the VPN server.&lt;/li&gt;
  &lt;li&gt;Your Internet traffic is safe on public Wi-Fi hotspots&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>SSH VPS</title>
   <link href="http://localhost:4000/2017/01/01/SSH-VPS/"/>
   <updated>2017-01-01T00:00:00+08:00</updated>
   <id>http://localhost:4000/life/2017/01/01/SSH-VPS</id>
   <content type="html">&lt;h2 id=&quot;ssh&quot;&gt;SSH&lt;/h2&gt;

&lt;h3 id=&quot;generate-ssh-key&quot;&gt;&lt;a href=&quot;https://www.vultr.com/docs/how-do-i-generate-ssh-keys&quot;&gt;Generate SSH Key&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`ssh-keygen -t rsa -b 4096`
`cat ~/.ssh/id_rsa.pub` backup
`ssh-copy-id user@&amp;lt;host&amp;gt;`
`ssh -i /path/to/id_rsa user@x.x.x.x`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ssh-basic-usage-secure-shell&quot;&gt;&lt;a href=&quot;https://abcdabcd987.com/ssh/&quot;&gt;SSH Basic Usage Secure Shell&lt;/a&gt;&lt;/h3&gt;

&lt;h2 id=&quot;vps&quot;&gt;VPS&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Test downloads speed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bbr&quot;&gt;BBR&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh
# chmod +x bbr.sh
# ./bbr.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`uname -r`
`sysctl net.ipv4.tcp_available_congestion_control`
`sysctl net.ipv4.tcp_congestion_control`
`sysctl net.core.default_qdisc`
`lsmod | grep bbr`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;shadowsocksr&quot;&gt;ShadowsocksR&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG/releases&quot;&gt;ShadowsocksX-NG&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-android/releases&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh
# chmod +x shadowsocksR.sh
# ./shadowsocksR.sh 2&amp;gt;&amp;amp;1 | tee shadowsocksR.log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`/etc/init.d/shadowsocks start`
`/etc/init.d/shadowsocks stop`
`/etc/init.d/shadowsocks restart`
`/etc/init.d/shadowsocks status`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;配置文件路径：/etc/shadowsocks.json
日志文件路径：/var/log/shadowsocks.log
代码安装目录：/usr/local/shadowsocks
Uninstall: ./shadowsocksR.sh uninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/9485-b0d99d196d019ec3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;
&lt;a href=&quot;http://vc2tea.com/whats-shadowsocks/&quot;&gt;Why&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;连接-vps&quot;&gt;连接 VPS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Windows: SSH 客户端（Tunnelier）; Mac: SSH 客户端(Issh): &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh root@&amp;lt;host&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;技巧&quot;&gt;技巧：&lt;/h3&gt;
&lt;p&gt;分享同一个 SSH 代理， 四步新建一受限 VPS 用户:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;登录 VPS: &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH root@&amp;lt;host&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建一个用户组：&lt;code class=&quot;highlighter-rouge&quot;&gt;groupadd hahaha&lt;/code&gt;  //“hahaha”可替换成任意名字。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建受限用户：&lt;code class=&quot;highlighter-rouge&quot;&gt;useradd -d /home/dotcom -m -g hahaha -s /bin/false dotcom&lt;/code&gt;
以上命令将会在 “hahaha” 创建一个新的 SSH 用户 “dotcom”，该用户只能使用 SSH 代理，不能登录你的 VPS 帐户。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 

</feed>
